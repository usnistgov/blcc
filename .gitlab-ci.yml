stages:
  - build
  - docker-build
  - release

backend-build:
  image: clux/muslrust:latest
  stage: build
  script:
    - cd backend
    - rustup target add "x86_64-unknown-linux-musl"
    - cargo build --release --locked --target "x86_64-unknown-linux-musl"
  cache:
    - key:
        files:
          - backend/Cargo.lock
      paths:
        - backend/target
  artifacts:
    paths:
      - backend/target/x86_64-unknown-linux-musl/release/backend

frontend-build:
  image: node:23
  stage: build
  before_script:
    - cd frontend
    - corepack enable pnpm
    - pnpm config set @lrd:registry=$CI_API_V4_URL/projects/$E3_SDK_PROJECT_ID/packages/npm/
    - pnpm config set //gitlab.nist.gov/gitlab/api/v4/projects/$E3_SDK_PROJECT_ID/packages/npm/:_authToken="$E3_SDK_PROJECT_TOKEN"
    - pnpm config list
  script:
    - pnpm install
    - pnpm run build
  cache:
    - key:
        files:
          - frontend/pnpm-lock.yaml
      paths:
        - frontend/node_modules
  artifacts:
    paths:
      - frontend/dist/*

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:latest

docker-build:
  image: docker:27.2.1
  stage: docker-build
  needs:
    - backend-build
    - frontend-build
  tags:
    - dind
  services:
    - docker:27.2.1-dind
  script:
    - docker build -t $IMAGE_TAG -f gitlab-dockerfile .
    - docker push $IMAGE_TAG

portainer-deploy:
  image: docker:27.2.1
  stage: release
  tags:
    - dind
  services:
    - docker:27.2.1-dind
  before_script:
    - apk add jq curl
    - unset DOCKER_HOST
    - export AUTH_BODY=$(jq -c -n --arg username "$PORTAINER_USERNAME" --arg password "$PORTAINER_PASSWORD" '{username:$username,password:$password}')
    - "export DOCKER_CUSTOM_HEADERS=\"Authorization=Bearer $(curl -s --header \"Content-Type: application\\json\" --request POST --data \"$AUTH_BODY\" http://haproxy-p.el.nist.gov:9000/api/auth | jq -r .jwt)\""
    - docker context create portainer --docker "host=tcp://haproxy-p.el.nist.gov:9000/api/endpoints/1/docker"
    - docker context use portainer
  script:
    - docker stack deploy -c portainer-stack.yml --resolve-image always blcc